version: '3.8'
services:
    postgres:
        image: postgres:latest
        restart: always
        environment: #for testing only
            - POSTGRES_USER=root
            - POSTGRES_PASSWORD=rootpassword
        ports:
            - "5432:5432"
        volumes:
            - ./postgres/db-seed.sql:/docker-entrypoint-initdb.d/db-seed.sql # seed db with fake data
            - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql  # create role for vault
            # - ./postgres-data:/var/lib/postgresql/data  # bind mount if need to persist data
    vault:
        hostname: vault
        container_name: vault
        depends_on:
        # Our app needs database so db needs to be loaded first
          - postgres
        image: vault:1.13.3
        environment:
          VAULT_ADDR: "http://0.0.0.0:8200"
          VAULT_API_ADDR: "http://0.0.0.0:8200"
        ports:
          - "8200:8200"
        volumes:
          - ./volumes/vault/file:/vault/file:rw
        cap_add:
          - IPC_LOCK
        entrypoint: vault server -dev -dev-listen-address="0.0.0.0:8200" -dev-root-token-id="root"
        # UI can be accessed via http://localhost:8200/ui in dev mode, ui is enabled by default. access method will be token and pw is "root"

    vault-init:
        container_name: vault-init
        image: vault:1.13.3
        volumes:
          - ./vault-config/vault-init.sh:/vault-init.sh
          - ./vault-config/dynamic-db-policy.hcl:/dynamic-db-policy.hcl
          - ./app-backend:/app
          - ./vault-config/readonly.sql:/readonly.sql
        depends_on:
          - vault
        restart: "no"
        entrypoint: sh -c "/vault-init.sh"
    
    app-backend:
        build: ./app-backend  # ensure the Dockerfile is in the current directory
        depends_on:
          # Our app needs database so db needs to be loaded first
          - postgres
          - vault-init
        ports:
          - "3000:8080"
        volumes:
          - ./app-backend:/usr/src/app 
        command: /bin/bash -c "sleep 5 && npm start"
    
